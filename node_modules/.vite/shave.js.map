{
  "version": 3,
  "sources": ["../shave/dist/shave.es.js", "dep:shave"],
  "sourcesContent": ["/**\n  shave - Shave is a javascript plugin that truncates multi-line text within a html element based on set max height\n  @version v2.5.10\n  @link https://github.com/yowainwright/shave#readme\n  @author Jeff Wainwright <yowainwright@gmail.com> (jeffry.in)\n  @license MIT\n**/\nfunction shave(target, maxHeight) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (typeof maxHeight === 'undefined' || isNaN(maxHeight)) throw Error('maxHeight is required');\n  var els = typeof target === 'string' ? document.querySelectorAll(target) : target;\n  if (!els) return;\n  var character = opts.character || '&mldr;';\n  var classname = opts.classname || 'js-shave';\n  var spaces = typeof opts.spaces === 'boolean' ? opts.spaces : true;\n  var charclassname = opts.charclassname || 'js-shave-char';\n  var charHtml = \"<span class=\\\"\".concat(charclassname, \"\\\">\").concat(character, \"</span>\");\n  if (!('length' in els)) els = [els];\n\n  for (var i = 0; i < els.length; i += 1) {\n    var el = els[i];\n    var styles = el.style;\n    var span = el.querySelector(\".\".concat(classname));\n    var textProp = el.textContent === undefined ? 'innerText' : 'textContent'; // If element text has already been shaved\n\n    if (span) {\n      // Remove the ellipsis to recapture the original text\n      el.removeChild(el.querySelector(\".\".concat(charclassname)));\n      el[textProp] = el[textProp]; // eslint-disable-line\n      // nuke span, recombine text\n    }\n\n    var fullText = el[textProp];\n    var words = spaces ? fullText.split(' ') : fullText; // If 0 or 1 words, we're done\n\n    if (words.length < 2) continue; // Temporarily remove any CSS height for text height calculation\n\n    var heightStyle = styles.height;\n    styles.height = 'auto';\n    var maxHeightStyle = styles.maxHeight;\n    styles.maxHeight = 'none'; // If already short enough, we're done\n\n    if (el.offsetHeight <= maxHeight) {\n      styles.height = heightStyle;\n      styles.maxHeight = maxHeightStyle;\n      continue;\n    } // Binary search for number of words which can fit in allotted height\n\n\n    var max = words.length - 1;\n    var min = 0;\n    var pivot = void 0;\n\n    while (min < max) {\n      pivot = min + max + 1 >> 1; // eslint-disable-line no-bitwise\n\n      el[textProp] = spaces ? words.slice(0, pivot).join(' ') : words.slice(0, pivot);\n      el.insertAdjacentHTML('beforeend', charHtml);\n      if (el.offsetHeight > maxHeight) max = pivot - 1;else min = pivot;\n    }\n\n    el[textProp] = spaces ? words.slice(0, max).join(' ') : words.slice(0, max);\n    el.insertAdjacentHTML('beforeend', charHtml);\n    var diff = spaces ? \" \".concat(words.slice(max).join(' ')) : words.slice(max);\n    var shavedText = document.createTextNode(diff);\n    var elWithShavedText = document.createElement('span');\n    elWithShavedText.classList.add(classname);\n    elWithShavedText.style.display = 'none';\n    elWithShavedText.appendChild(shavedText);\n    el.insertAdjacentElement('beforeend', elWithShavedText);\n    styles.height = heightStyle;\n    styles.maxHeight = maxHeightStyle;\n  }\n}\n\nexport default shave;\n", "import d from \"./node_modules/shave/dist/shave.es.js\";export default d;"],
  "mappings": ";;;AAAA,AAOA,eAAe,QAAQ,WAAW;AAChC,MAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC/E,MAAI,OAAO,cAAc,eAAe,MAAM;AAAY,UAAM,MAAM;AACtE,MAAI,MAAM,OAAO,WAAW,WAAW,SAAS,iBAAiB,UAAU;AAC3E,MAAI,CAAC;AAAK;AACV,MAAI,YAAY,KAAK,aAAa;AAClC,MAAI,YAAY,KAAK,aAAa;AAClC,MAAI,SAAS,OAAO,KAAK,WAAW,YAAY,KAAK,SAAS;AAC9D,MAAI,gBAAgB,KAAK,iBAAiB;AAC1C,MAAI,WAAW,gBAAiB,OAAO,eAAe,MAAO,OAAO,WAAW;AAC/E,MAAI,CAAE,aAAY;AAAM,UAAM,CAAC;AAE/B,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK,GAAG;AACtC,QAAI,KAAK,IAAI;AACb,QAAI,SAAS,GAAG;AAChB,QAAI,OAAO,GAAG,cAAc,IAAI,OAAO;AACvC,QAAI,WAAW,GAAG,gBAAgB,SAAY,cAAc;AAE5D,QAAI,MAAM;AAER,SAAG,YAAY,GAAG,cAAc,IAAI,OAAO;AAC3C,SAAG,YAAY,GAAG;AAAA;AAIpB,QAAI,WAAW,GAAG;AAClB,QAAI,QAAQ,SAAS,SAAS,MAAM,OAAO;AAE3C,QAAI,MAAM,SAAS;AAAG;AAEtB,QAAI,cAAc,OAAO;AACzB,WAAO,SAAS;AAChB,QAAI,iBAAiB,OAAO;AAC5B,WAAO,YAAY;AAEnB,QAAI,GAAG,gBAAgB,WAAW;AAChC,aAAO,SAAS;AAChB,aAAO,YAAY;AACnB;AAAA;AAIF,QAAI,MAAM,MAAM,SAAS;AACzB,QAAI,MAAM;AACV,QAAI,QAAQ;AAEZ,WAAO,MAAM,KAAK;AAChB,cAAQ,MAAM,MAAM,KAAK;AAEzB,SAAG,YAAY,SAAS,MAAM,MAAM,GAAG,OAAO,KAAK,OAAO,MAAM,MAAM,GAAG;AACzE,SAAG,mBAAmB,aAAa;AACnC,UAAI,GAAG,eAAe;AAAW,cAAM,QAAQ;AAAA;AAAO,cAAM;AAAA;AAG9D,OAAG,YAAY,SAAS,MAAM,MAAM,GAAG,KAAK,KAAK,OAAO,MAAM,MAAM,GAAG;AACvE,OAAG,mBAAmB,aAAa;AACnC,QAAI,OAAO,SAAS,IAAI,OAAO,MAAM,MAAM,KAAK,KAAK,QAAQ,MAAM,MAAM;AACzE,QAAI,aAAa,SAAS,eAAe;AACzC,QAAI,mBAAmB,SAAS,cAAc;AAC9C,qBAAiB,UAAU,IAAI;AAC/B,qBAAiB,MAAM,UAAU;AACjC,qBAAiB,YAAY;AAC7B,OAAG,sBAAsB,aAAa;AACtC,WAAO,SAAS;AAChB,WAAO,YAAY;AAAA;AAAA;AAIvB,IAAO,mBAAQ;;;AC3EuC,IAAO,gBAAQ;",
  "names": []
}
